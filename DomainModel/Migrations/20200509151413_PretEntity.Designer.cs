// <auto-generated />
using System;
using DistribuitorServiciiMobile.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DomainModel.Migrations
{
    [DbContext(typeof(DistribuitorServiciiMobileContext))]
    [Migration("20200509151413_PretEntity")]
    partial class PretEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Abonament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInceput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSfarsit")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeAbonament")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Abonament");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Bonus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DateBonus")
                        .HasColumnType("float");

                    b.Property<double>("MinuteBonus")
                        .HasColumnType("float");

                    b.Property<int>("SmsBonus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Bonus");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodNumericPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("ClientId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.DateMobile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DateConsumate")
                        .HasColumnType("int");

                    b.Property<int>("NumarDate")
                        .HasColumnType("int");

                    b.Property<Guid>("PretDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("PretDataId");

                    b.ToTable("DateMobile");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Minute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MinuteConsumate")
                        .HasColumnType("int");

                    b.Property<int>("NumarMinute")
                        .HasColumnType("int");

                    b.Property<Guid>("PretMinuteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipMinute")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("PretMinuteId");

                    b.ToTable("Minute");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.SMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumarSms")
                        .HasColumnType("int");

                    b.Property<Guid>("PretSmsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SmsConsumate")
                        .HasColumnType("int");

                    b.Property<string>("TipSms")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("PretSmsId");

                    b.ToTable("Sms");
                });

            modelBuilder.Entity("DomainModel.Models.ConvorbireTelefonica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataApel")
                        .HasColumnType("datetime2");

                    b.Property<double>("DurataConvorbire")
                        .HasColumnType("float");

                    b.Property<Guid>("InitiatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceptorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InitiatorId");

                    b.HasIndex("ReceptorId");

                    b.ToTable("ConvorbiriTelefonice");
                });

            modelBuilder.Entity("DomainModel.Models.Plata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPlata")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SumaPlatitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TotalDePlataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContractId");

                    b.HasIndex("SumaPlatitaId");

                    b.HasIndex("TotalDePlataId");

                    b.ToTable("Plati");
                });

            modelBuilder.Entity("DomainModel.Models.Pret", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Suma")
                        .HasColumnType("float");

                    b.Property<string>("Valuta")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Preturi");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Bonus", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Contract", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", "Abonament")
                        .WithMany("Contracte")
                        .HasForeignKey("AbonamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuitorServiciiMobile.Models.Client", "Client")
                        .WithMany("Contracte")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.DateMobile", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", null)
                        .WithMany("AbonamentDate")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DomainModel.Models.Pret", "PretData")
                        .WithMany()
                        .HasForeignKey("PretDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Minute", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", null)
                        .WithMany("AbonamentMinute")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DomainModel.Models.Pret", "PretMinute")
                        .WithMany()
                        .HasForeignKey("PretMinuteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.SMS", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", null)
                        .WithMany("AbonamentSms")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DomainModel.Models.Pret", "PretSms")
                        .WithMany()
                        .HasForeignKey("PretSmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.Models.ConvorbireTelefonica", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Client", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuitorServiciiMobile.Models.Client", "Receptor")
                        .WithMany()
                        .HasForeignKey("ReceptorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DomainModel.Models.Plata", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuitorServiciiMobile.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Models.Pret", "SumaPlatita")
                        .WithMany()
                        .HasForeignKey("SumaPlatitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModel.Models.Pret", "TotalDePlata")
                        .WithMany()
                        .HasForeignKey("TotalDePlataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
