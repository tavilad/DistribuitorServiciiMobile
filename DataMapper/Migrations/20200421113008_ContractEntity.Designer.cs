// <auto-generated />
using System;
using DistribuitorServiciiMobile.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataMapper.Migrations
{
    [DbContext(typeof(DistribuitorServiciiMobileContext))]
    [Migration("20200421113008_ContractEntity")]
    partial class ContractEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Abonament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.Property<double>("TraficDate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Abonament");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("DateId");

                    b.ToTable("AbonamentDate");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentMinute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MinuteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("MinuteId");

                    b.ToTable("AbonamentMinute");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentSms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SmsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("SmsId");

                    b.ToTable("AbonamentSms");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodNumericPersonal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbonamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbonamentId");

                    b.HasIndex("ClientId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.DateMobile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumarDate")
                        .HasColumnType("int");

                    b.Property<string>("TipDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DateMobile");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Minute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumarMinute")
                        .HasColumnType("int");

                    b.Property<string>("TipMinute")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Minute");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.SMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumarSms")
                        .HasColumnType("int");

                    b.Property<string>("TipSms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sms");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentDate", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", "Abonament")
                        .WithMany("AbonamentDate")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DistribuitorServiciiMobile.Models.DateMobile", "Date")
                        .WithMany("AbonamentDate")
                        .HasForeignKey("DateId");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentMinute", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", "Abonament")
                        .WithMany("AbonamentMinute")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DistribuitorServiciiMobile.Models.Minute", "Minute")
                        .WithMany("AbonamentMinute")
                        .HasForeignKey("MinuteId");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.AbonamentSms", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", "Abonament")
                        .WithMany("AbonamentSms")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DistribuitorServiciiMobile.Models.SMS", "Sms")
                        .WithMany("AbonamentSms")
                        .HasForeignKey("SmsId");
                });

            modelBuilder.Entity("DistribuitorServiciiMobile.Models.Contract", b =>
                {
                    b.HasOne("DistribuitorServiciiMobile.Models.Abonament", "Abonament")
                        .WithMany("Contracte")
                        .HasForeignKey("AbonamentId");

                    b.HasOne("DistribuitorServiciiMobile.Models.Client", "Client")
                        .WithMany("Contracte")
                        .HasForeignKey("ClientId");
                });
#pragma warning restore 612, 618
        }
    }
}
